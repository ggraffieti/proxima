{
  "swagger": "2.0",
  "info": {
    "description": "This is a simple API set of the Domain Name System service of the Proxima project.",
    "version": "1.0.0",
    "title": "Proxima DNS Service"
  },
  "host": "localhost:6041",
  "basePath": "/dns",
  "tags": [
    {
      "name": "address",
      "description": "Everything about all the available ways to contact the supported Proxima services."
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/address/{service}": {
      "get": {
        "tags": [
          "address"
        ],
        "summary": "Returns the reference of the Proxima component offering the specified service.",
        "description": "Returns an IP address and a port number.",
        "operationId": "getAddress",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "service",
            "in": "path",
            "description": "The service of the requested component.",
            "required": true,
            "type": "string",
            "format": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/getAddressResponse"
            }
          },
          "404": {
            "description": "not found"
          }
        }
      },
      "delete": {
        "tags": [
          "address"
        ],
        "summary": "Deletes the reference of the specified Proxima component.",
        "description": "Deletes the specified IP address and port number.",
        "operationId": "deleteAddress",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "service",
            "in": "path",
            "description": "The service of the requested component.",
            "required": true,
            "type": "string"
          },
          {
            "name": "ip",
            "in": "query",
            "description": "The IP address of the service.",
            "required": true,
            "type": "string"
          },
          {
            "name": "port",
            "in": "query",
            "description": "The port number of the service.",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      }
    },
    "/address": {
      "post": {
        "tags": [
          "address"
        ],
        "summary": "Request for the creation of the reference of a Proxima component offering a certain service.",
        "operationId": "postAddress",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Specification of the IP address and port number of the Proxima component, along with the indication of the service it offers.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/postAddressRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "created",
            "headers": {
              "Location": {
                "description": "a link to the newly created service address.",
                "type": "string"
              }
            }
          },
          "400": {
            "description": "bad request"
          }
        }
      }
    }
  },
  "definitions": {
    "getAddressResponse": {
      "type": "object",
      "properties": {
        "ip": {
          "type": "string",
          "example": "192.168.0.1"
        },
        "port": {
          "type": "integer",
          "example": 1406
        }
      }
    },
    "postAddressRequest": {
      "type": "object",
      "properties": {
        "service": {
          "type": "string",
          "example": "proxima.medical.firstAid"
        },
        "ip": {
          "type": "string",
          "example": "192.168.0.1"
        },
        "port": {
          "type": "integer",
          "example": 1406
        }
      }
    }
  }
}